@use '../abstract/colors' as colors;

button {
	.mdc-button {
		&__label {
			display: flex;
			align-items: center;
			gap: 6px;
		}
	}
	&.mat-mdc-button {
		&.mat-tertiary {
			color: var(--mat-sys-primary);
			&:hover,
			&:focus {
				box-shadow: colors.$color-shadow-focus-ring;
			}
			&.mat-mdc-button-disabled {
				color: colors.$color-text-disabled;
			}
			.mat-mdc-button-persistent-ripple {
				&::before {
					background: transparent;
				}
			}
		}
		&.mat-link {
			color: var(--mat-sys-primary);
			&.mat-mdc-button-disabled {
				color: colors.$color-text-disabled;
			}
			.mat-mdc-button-persistent-ripple {
				&::before {
					background: transparent;
				}
			}
		}
	}
	&.mat-mdc-raised-button {
		box-shadow: unset;
		.mat-mdc-button-touch-target {
			height: inherit;
		}
		&.mat-primary {
			color: colors.$color-text-inverse;
			background-color: var(--mat-sys-primary);
			border: 1px solid var(--mat-sys-primary);
			&:hover,
			&:focus,
			&:active {
				box-shadow: colors.$color-shadow-focus-ring;
			}
			&:active {
				animation: pulsate-16 1s infinite;
			}
		}
		&.mat-secondary {
			color: var(--mat-sys-primary);
			background-color: colors.$color-background-brand-subtle;
			border-color: colors.$color-background-brand-subtle;
			&:hover,
			&:focus,
			&:active {
				box-shadow: colors.$color-shadow-focus-ring;
			}
		}
		&.mat-secondary-gray {
			color: var(--mat-sys-primary);
			background-color: white;
			border-color: colors.$color-border;
			&:hover,
			&:focus,
			&:active {
				box-shadow: colors.$color-shadow-focus-ring-gray;
			}
		}
		&.mat-mdc-button-disabled {
			color: colors.$color-text-disabled;
			background-color: colors.$color-background-disabled;
			border-color: colors.$color-background-disabled;
		}
	}
	&[mat-icon-button] {
		display: flex;
		align-items: center;
	}
}

@keyframes pulsate-16 {
	0% {
		transform: scale(1.04, 1.08);
	}
	50% {
		transform: scale(1.08, 1.12);
	}
	100% {
		transform: scale(1.04, 1.08);
	}
}
