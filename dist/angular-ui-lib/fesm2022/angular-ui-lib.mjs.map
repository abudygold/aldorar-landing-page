{"version":3,"file":"angular-ui-lib.mjs","sources":["../../../projects/angular-ui-lib/src/lib/components/button/button.component.ts","../../../projects/angular-ui-lib/src/lib/components/button/button.component.html","../../../projects/angular-ui-lib/src/lib/shared/pipes/currency-amount.pipe.ts","../../../projects/angular-ui-lib/src/lib/components/table/pagination/pagination.component.ts","../../../projects/angular-ui-lib/src/lib/components/table/pagination/pagination.component.html","../../../projects/angular-ui-lib/src/lib/components/table/table.component.ts","../../../projects/angular-ui-lib/src/lib/components/table/table.component.html","../../../projects/angular-ui-lib/src/lib/store/form.store.ts","../../../projects/angular-ui-lib/src/lib/components/textbox/textbox.component.ts","../../../projects/angular-ui-lib/src/lib/components/textbox/textbox.component.html","../../../projects/angular-ui-lib/src/lib/components/textarea/textarea.component.ts","../../../projects/angular-ui-lib/src/lib/components/textarea/textarea.component.html","../../../projects/angular-ui-lib/src/lib/components/dropdown/dropdown.component.ts","../../../projects/angular-ui-lib/src/lib/components/dropdown/dropdown.component.html","../../../projects/angular-ui-lib/src/lib/services/api/api.service.ts","../../../projects/angular-ui-lib/src/lib/shared/model/button.model.ts","../../../projects/angular-ui-lib/src/lib/shared/model/table.model.ts","../../../projects/angular-ui-lib/src/lib/shared/model/textbox.model.ts","../../../projects/angular-ui-lib/src/lib/shared/model/dropdown.model.ts","../../../projects/angular-ui-lib/src/public-api.ts","../../../projects/angular-ui-lib/src/angular-ui-lib.ts"],"sourcesContent":["import { Component, input, output } from '@angular/core';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ButtonModel } from '../../shared/model';\r\n\r\n@Component({\r\n\tselector: 'lib-button',\r\n\timports: [NgTemplateOutlet, MatButtonModule, MatIconModule],\r\n\ttemplateUrl: './button.component.html',\r\n\tstyleUrl: './button.component.scss',\r\n})\r\nexport class ButtonComponent {\r\n\tconfig = input.required<ButtonModel>();\r\n\tonClick = output<void>();\r\n}\r\n","@if (!config().link) {\r\n\t<button\r\n\t\tmat-button\r\n\t\t[disabled]=\"config().disabled\"\r\n\t\t[class.mat-mdc-raised-button]=\"config().variant === 'raised'\"\r\n\t\t[class.mat-mdc-outlined-button]=\"config().variant === 'stroked'\"\r\n\t\t[class.mat-mdc-unelevated-button]=\"config().variant === 'flat'\"\r\n\t\t[class.mat-mdc-icon-button]=\"config().variant === 'icon'\"\r\n\t\t[class.mat-mdc-fab]=\"config().variant === 'fab'\"\r\n\t\t[class.mat-mdc-mini-fab]=\"config().variant === 'mini-fab'\"\r\n\t\t[class.mat-mdc-extended-fab]=\"config().variant === 'extended-fab'\"\r\n\t\t(click)=\"onClick.emit()\"\r\n\t>\r\n\t\t<ng-container [ngTemplateOutlet]=\"buttonLabel\" />\r\n\t</button>\r\n} @else {\r\n\t<a\r\n\t\tmat-button\r\n\t\ttarget=\"_blank\"\r\n\t\t[href]=\"config().link\"\r\n\t\t[disabled]=\"config().disabled\"\r\n\t\t[class.mat-mdc-raised-button]=\"config().variant === 'raised'\"\r\n\t\t[class.mat-mdc-outlined-button]=\"config().variant === 'stroked'\"\r\n\t\t[class.mat-mdc-unelevated-button]=\"config().variant === 'flat'\"\r\n\t\t[class.mat-mdc-icon-button]=\"config().variant === 'icon'\"\r\n\t\t[class.mat-mdc-fab]=\"config().variant === 'fab'\"\r\n\t\t[class.mat-mdc-mini-fab]=\"config().variant === 'mini-fab'\"\r\n\t\t[class.mat-mdc-extended-fab]=\"config().variant === 'extended-fab'\"\r\n\t>\r\n\t\t<ng-container [ngTemplateOutlet]=\"buttonLabel\" />\r\n\t</a>\r\n}\r\n\r\n<ng-template #buttonLabel>\r\n\t@if (config().icon && config().iconPosition === 'start') {\r\n\t\t<mat-icon>{{ config().icon }}</mat-icon>\r\n\t}\r\n\r\n\t<span>{{ config().label }}</span>\r\n\r\n\t@if (config().icon && config().iconPosition === 'end') {\r\n\t\t<mat-icon>{{ config().icon }}</mat-icon>\r\n\t}\r\n</ng-template>\r\n","/*\r\n *  * Author: Abdullah Umar Babsel\r\n *  * Date: 12/06/2025\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'currencyIntl',\r\n\tstandalone: true,\r\n})\r\nexport class CurrencyIntlPipe implements PipeTransform {\r\n\ttransform(\r\n\t\tvalue: number,\r\n\t\tcurrency: string = 'USD',\r\n\t\tlocale: string = 'en-US',\r\n\t\tminimumFractionDigits?: number,\r\n\t\tmaximumFractionDigits?: number,\r\n\t): string {\r\n\t\tconst options: Intl.NumberFormatOptions = {\r\n\t\t\tstyle: 'currency',\r\n\t\t\tcurrency,\r\n\t\t\tminimumFractionDigits,\r\n\t\t\tmaximumFractionDigits,\r\n\t\t};\r\n\r\n\t\t// Remove undefined options\r\n\t\tObject.keys(options).forEach(\r\n\t\t\tkey =>\r\n\t\t\t\toptions[key as keyof Intl.NumberFormatOptions] === undefined &&\r\n\t\t\t\tdelete options[key as keyof Intl.NumberFormatOptions],\r\n\t\t);\r\n\r\n\t\treturn new Intl.NumberFormat(locale, options).format(value);\r\n\t}\r\n}\r\n","import { Component, OnInit, input, output, model } from '@angular/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n@Component({\r\n\tselector: 'lib-pagination',\r\n\timports: [MatSelectModule, MatIconModule, MatDividerModule],\r\n\ttemplateUrl: './pagination.component.html',\r\n\tstyleUrl: './pagination.component.scss',\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\tpageChange = output<{ pageIndex: number; pageSize: number }>();\r\n\r\n\tpageSizeOptions = [5, 10, 25, 50];\r\n\r\n\ttotalItems = input.required<number>();\r\n\tpageSize = model<number>(10);\r\n\tpageIndex = model<number>(0);\r\n\r\n\tget totalPages(): number {\r\n\t\treturn Math.ceil(this.totalItems() / this.pageSize());\r\n\t}\r\n\r\n\tget totalPagesArray(): number[] {\r\n\t\treturn Array(this.totalPages)\r\n\t\t\t.fill(0)\r\n\t\t\t.map((_, i) => i);\r\n\t}\r\n\r\n\tget rangeStart(): number {\r\n\t\treturn this.pageIndex() * this.pageSize() + 1;\r\n\t}\r\n\r\n\tget rangeEnd(): number {\r\n\t\treturn Math.min((this.pageIndex() + 1) * this.pageSize(), this.totalItems());\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.emitChange();\r\n\t}\r\n\r\n\tonChangePageSize(): void {\r\n\t\tthis.pageIndex.set(0);\r\n\t\tthis.emitChange();\r\n\t}\r\n\r\n\tonPageChange(): void {\r\n\t\tthis.emitChange();\r\n\t}\r\n\r\n\tnextPage(): void {\r\n\t\tif (this.pageIndex() < this.totalPages - 1) {\r\n\t\t\tthis.pageIndex.set(this.pageIndex() + 1);\r\n\t\t\tthis.emitChange();\r\n\t\t}\r\n\t}\r\n\r\n\tprevPage(): void {\r\n\t\tif (this.pageIndex() > 0) {\r\n\t\t\tthis.pageIndex.set(this.pageIndex() - 1);\r\n\t\t\tthis.emitChange();\r\n\t\t}\r\n\t}\r\n\r\n\temitChange(): void {\r\n\t\tthis.pageChange.emit({ pageIndex: this.pageIndex(), pageSize: this.pageSize() });\r\n\t}\r\n}\r\n","<div class=\"custom-paginator\">\r\n\t<div class=\"left\">\r\n\t\t<span class=\"label\">Items per page:</span>\r\n\t\t<mat-select [(value)]=\"pageSize\" (selectionChange)=\"onChangePageSize()\">\r\n\t\t\t@for (item of pageSizeOptions; track $index) {\r\n\t\t\t\t<mat-option [value]=\"item\">{{ item }}</mat-option>\r\n\t\t\t}\r\n\t\t</mat-select>\r\n\r\n\t\t<mat-divider [vertical]=\"true\" class=\"divider\" />\r\n\r\n\t\t<span class=\"label\"> {{ rangeStart }}-{{ rangeEnd }} of {{ totalItems() }} Item </span>\r\n\t</div>\r\n\r\n\t<div class=\"right\">\r\n\t\t<mat-divider [vertical]=\"true\" class=\"divider\" />\r\n\r\n\t\t<mat-select [(value)]=\"pageIndex\" (selectionChange)=\"onPageChange()\">\r\n\t\t\t@for (item of totalPagesArray; track $index) {\r\n\t\t\t\t<mat-option [value]=\"item\">{{ item + 1 }}</mat-option>\r\n\t\t\t}\r\n\t\t</mat-select>\r\n\t\t<span>of {{ totalPages }}</span>\r\n\r\n\t\t<mat-divider [vertical]=\"true\" class=\"divider\" />\r\n\r\n\t\t<button mat-icon-button (click)=\"prevPage()\" [disabled]=\"pageIndex() === 0\" class=\"arrow-icon\">\r\n\t\t\t<mat-icon>arrow_back</mat-icon>\r\n\t\t</button>\r\n\r\n\t\t<mat-divider [vertical]=\"true\" class=\"divider\" />\r\n\r\n\t\t<button\r\n\t\t\tmat-icon-button\r\n\t\t\t(click)=\"nextPage()\"\r\n\t\t\t[disabled]=\"pageIndex() >= totalPages - 1\"\r\n\t\t\tclass=\"arrow-icon\"\r\n\t\t>\r\n\t\t\t<mat-icon>arrow_forward</mat-icon>\r\n\t\t</button>\r\n\t</div>\r\n</div>\r\n","import {\r\n\tChangeDetectionStrategy,\r\n\tComponent,\r\n\tContentChild,\r\n\tinput,\r\n\toutput,\r\n\tTemplateRef,\r\n\tViewChild,\r\n} from '@angular/core';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSort, MatSortModule, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { TableConfigModel } from '../../shared/model';\r\nimport { CommonModule, NgTemplateOutlet } from '@angular/common';\r\nimport { CurrencyIntlPipe } from '../../shared/pipes';\r\nimport { PaginationComponent } from './pagination';\r\n\r\ninterface Pagination {\r\n\tpageIndex: number;\r\n\tpageSize: number;\r\n}\r\n\r\n@Component({\r\n\tselector: 'lib-table',\r\n\timports: [\r\n\t\tNgTemplateOutlet,\r\n\t\tCommonModule,\r\n\t\tCurrencyIntlPipe,\r\n\t\tMatTableModule,\r\n\t\tMatSortModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tPaginationComponent,\r\n\t],\r\n\ttemplateUrl: './table.component.html',\r\n\tstyleUrl: './table.component.scss',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TableComponent {\r\n\tsortChange = output<Sort>();\r\n\tpageChange = output<Pagination>();\r\n\tmouseOverChange = output<any>();\r\n\tselectData = output<any>();\r\n\r\n\tdataSource: MatTableDataSource<any> = new MatTableDataSource<any>([]);\r\n\r\n\ttableConfig = input.required<TableConfigModel>();\r\n\r\n\t@ViewChild(MatSort) sort!: MatSort;\r\n\r\n\t@ContentChild('selectionTemplate')\r\n\tpublic selectionTemplate!: TemplateRef<any> | null;\r\n\r\n\t@ContentChild('customTemplate')\r\n\tpublic customTemplate!: TemplateRef<any> | null;\r\n\r\n\tpublic disableClick(event: Event, tableKey: string) {\r\n\t\t(tableKey === 'action' || tableKey === 'selection') && event.stopPropagation();\r\n\t}\r\n\r\n\tpublic displayValue(value: any): any {\r\n\t\treturn value !== null && value !== undefined ? value : '-';\r\n\t}\r\n\r\n\tpublic getPropertyValue(obj: any, key: string): any {\r\n\t\tif (!key) return obj;\r\n\r\n\t\tconst props = key.split('.');\r\n\r\n\t\tfor (let i = 0; i < props.length; i++) {\r\n\t\t\tif (obj === null || obj === undefined) {\r\n\t\t\t\treturn 'N/A';\r\n\t\t\t}\r\n\t\t\tobj = obj[props[i]];\r\n\t\t}\r\n\r\n\t\treturn obj !== undefined ? obj : null;\r\n\t}\r\n\r\n\tget pagedData(): MatTableDataSource<any> {\r\n\t\tconst { dataSource, pageIndex, pageSize } = this.tableConfig();\r\n\r\n\t\tif (Array.isArray(dataSource)) {\r\n\t\t\tconst start = pageIndex * pageSize;\r\n\t\t\tconst end = start + pageSize;\r\n\r\n\t\t\tthis.dataSource = new MatTableDataSource<any>(dataSource.slice(start, end));\r\n\t\t\tthis.dataSource.sort = this.sort;\r\n\t\t}\r\n\r\n\t\treturn this.dataSource;\r\n\t}\r\n\r\n\tonPageChange(page: Pagination): void {\r\n\t\tif (!page) return;\r\n\r\n\t\tif (this.tableConfig().isHttpPagination()) {\r\n\t\t\tthis.pageChange.emit(page);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.tableConfig().pageIndex = page.pageIndex;\r\n\t\tthis.tableConfig().pageSize = page.pageSize;\r\n\t\tthis.pagedData;\r\n\t}\r\n}\r\n","@if (tableConfig()) {\r\n\t<div\r\n\t\tclass=\"table-container\"\r\n\t\t[class.table-row]=\"tableConfig().isEmpty()\"\r\n\t\t[class.table-empty]=\"tableConfig().isEmpty()\"\r\n\t\t[class.loading]=\"tableConfig().isLoading()\"\r\n\t>\r\n\t\t<div class=\"table-wrapper\">\r\n\t\t\t<table\r\n\t\t\t\tmatSort\r\n\t\t\t\tmatSortDisableClear\r\n\t\t\t\tmat-table\r\n\t\t\t\tclass=\"table\"\r\n\t\t\t\t[class]=\"tableConfig().tableClass\"\r\n\t\t\t\t[dataSource]=\"pagedData\"\r\n\t\t\t\t[matSortActive]=\"\r\n\t\t\t\t\ttableConfig().isSorter() ? tableConfig().sortKey || tableConfig().dataKey[0] : ''\r\n\t\t\t\t\"\r\n\t\t\t\t[matSortDirection]=\"tableConfig().sortOrder\"\r\n\t\t\t\t(matSortChange)=\"sortChange.emit($event)\"\r\n\t\t\t>\r\n\t\t\t\t<tr mat-header-row class=\"table-header\" *matHeaderRowDef=\"tableConfig().dataKey\"></tr>\r\n\r\n\t\t\t\t<tr\r\n\t\t\t\t\tmat-row\r\n\t\t\t\t\tclass=\"table-row\"\r\n\t\t\t\t\t*matRowDef=\"let row; columns: tableConfig().dataKey; let rowIndex = index\"\r\n\t\t\t\t\t[class.table-row-selected]=\"tableConfig().isSelected(row)\"\r\n\t\t\t\t\t(click)=\"selectData.emit(row)\"\r\n\t\t\t\t\t(mouseleave)=\"mouseOverChange.emit(null)\"\r\n\t\t\t\t\t(mouseover)=\"mouseOverChange.emit(row)\"\r\n\t\t\t\t></tr>\r\n\r\n\t\t\t\t@for (tableKey of tableConfig().dataKey; track tableKey; let index = $index) {\r\n\t\t\t\t\t<ng-container [matColumnDef]=\"tableKey\">\r\n\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef>\r\n\t\t\t\t\t\t\t@if (tableKey === 'selection') {\r\n\t\t\t\t\t\t\t\t<ng-container [ngTemplateOutlet]=\"selectionTemplate\"> </ng-container>\r\n\t\t\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclass=\"table-header\"\r\n\t\t\t\t\t\t\t\t\tmat-sort-header\r\n\t\t\t\t\t\t\t\t\t[disableClear]=\"true\"\r\n\t\t\t\t\t\t\t\t\t[class.tw-font-normal]=\"!tableConfig().isSorter()\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{{ tableConfig().dataLabel[index] }}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\tmat-cell\r\n\t\t\t\t\t\t\t*matCellDef=\"let data; let i = index; let rowIndex = index\"\r\n\t\t\t\t\t\t\t(click)=\"disableClick($event, tableKey)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div class=\"table-row-cell\">\r\n\t\t\t\t\t\t\t\t@switch (tableConfig().dataType[tableKey].type) {\r\n\t\t\t\t\t\t\t\t\t@case ('date') {\r\n\t\t\t\t\t\t\t\t\t\t{{\r\n\t\t\t\t\t\t\t\t\t\t\tgetPropertyValue(data, tableKey)\r\n\t\t\t\t\t\t\t\t\t\t\t\t| date: tableConfig().dataType[tableKey].format\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t@case ('number') {\r\n\t\t\t\t\t\t\t\t\t\t{{ getPropertyValue(data, tableKey) }}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t@case ('title') {\r\n\t\t\t\t\t\t\t\t\t\t{{ getPropertyValue(data, tableKey) | titlecase }}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t@case ('currency') {\r\n\t\t\t\t\t\t\t\t\t\t<!-- {{ 123456.789 | currencyIntl:'JPY':'ja-JP':0:0 }} -->\r\n\t\t\t\t\t\t\t\t\t\t{{\r\n\t\t\t\t\t\t\t\t\t\t\tgetPropertyValue(data, tableKey) || 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t| currencyIntl\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: tableConfig().dataType[tableKey].currency\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: tableConfig().dataType[tableKey].locale\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: tableConfig().dataType[tableKey].minimumFractionDigits\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: tableConfig().dataType[tableKey].maximumFractionDigits\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t@case ('custom') {\r\n\t\t\t\t\t\t\t\t\t\t<ng-container\r\n\t\t\t\t\t\t\t\t\t\t\t[ngTemplateOutlet]=\"customTemplate\"\r\n\t\t\t\t\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey: tableKey,\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex: rowIndex,\r\n\t\t\t\t\t\t\t\t\t\t\t}\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t@default {\r\n\t\t\t\t\t\t\t\t\t\t{{ displayValue(getPropertyValue(data, tableKey)) }}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@if (tableConfig().isEmpty()) {\r\n\t\t\t\t\t<ng-container>\r\n\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\tmat-footer-row\r\n\t\t\t\t\t\t\t*matFooterRowDef=\"['nodata']\"\r\n\t\t\t\t\t\t\t[hidden]=\"(tableConfig().dataSource || []).length\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span> No Data Available </span>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t<ng-container matColumnDef=\"nodata\">\r\n\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\tmat-footer-row\r\n\t\t\t\t\t\t\t*matFooterCellDef\r\n\t\t\t\t\t\t\tclass=\"border-empty\"\r\n\t\t\t\t\t\t\t[colSpan]=\"(tableConfig().dataKey || []).length\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNo Data Available\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t}\r\n\t\t\t</table>\r\n\t\t</div>\r\n\r\n\t\t@if (!tableConfig().isEmpty() && tableConfig().isPagination()) {\r\n\t\t\t<div class=\"table-pagination\">\r\n\t\t\t\t<lib-pagination\r\n\t\t\t\t\t[pageIndex]=\"tableConfig().pageIndex\"\r\n\t\t\t\t\t[pageSize]=\"tableConfig().pageSize\"\r\n\t\t\t\t\t[totalItems]=\"tableConfig().dataTotal\"\r\n\t\t\t\t\t(pageChange)=\"onPageChange($event)\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t}\r\n\r\n\t\t@if (tableConfig().isLoading()) {\r\n\t\t\t<div class=\"spinner-container\">\r\n\t\t\t\t<mat-progress-spinner color=\"primary\" mode=\"indeterminate\"></mat-progress-spinner>\r\n\t\t\t</div>\r\n\t\t}\r\n\t</div>\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FormStore {\r\n\tgetControl(control: AbstractControl): AbstractControl {\r\n\t\treturn control;\r\n\t}\r\n\r\n\tgetFormArray(formArray: FormArray): FormGroup[] {\r\n\t\treturn formArray.controls as FormGroup[];\r\n\t}\r\n\r\n\taddControl(formArray: FormArray, initFunction: any): void {\r\n\t\tformArray.push(initFunction());\r\n\t}\r\n\r\n\tremoveControl(formArray: FormArray, index: number): void {\r\n\t\tformArray.removeAt(index);\r\n\t}\r\n\r\n\tisValid(control: AbstractControl): boolean {\r\n\t\tif (!control) return false;\r\n\r\n\t\treturn control.invalid && (control.dirty || control.touched);\r\n\t}\r\n\r\n\tgetErrorMessage(control: AbstractControl): string | null {\r\n\t\tif (!control || !control.errors) return null;\r\n\r\n\t\tconst errors = control.errors;\r\n\t\tconsole.log('Control errors:', errors);\r\n\t\tif (errors['required']) {\r\n\t\t\tconsole.log('Required field error:', control);\r\n\t\t\treturn 'This field is required.';\r\n\t\t}\r\n\t\tif (errors['email']) {\r\n\t\t\treturn 'Please enter a valid email address.';\r\n\t\t}\r\n\t\tif (errors['minlength']) {\r\n\t\t\treturn `Minimum length is ${errors['minlength'].requiredLength}.`;\r\n\t\t}\r\n\t\tif (errors['maxlength']) {\r\n\t\t\tconsole.log('Max length error:', errors['maxlength']);\r\n\t\t\treturn `Maximum length is ${errors['maxlength'].requiredLength}.`;\r\n\t\t}\r\n\t\tif (errors['min']) {\r\n\t\t\treturn `Minimum value is ${errors['min'].min}.`;\r\n\t\t}\r\n\t\tif (errors['max']) {\r\n\t\t\treturn `Maximum value is ${errors['max'].max}.`;\r\n\t\t}\r\n\t\tif (errors['pattern']) {\r\n\t\t\treturn 'Invalid format.';\r\n\t\t}\r\n\t\t// Add more error mappings as needed\r\n\r\n\t\treturn 'Invalid field.';\r\n\t}\r\n}\r\n","import { NgTemplateOutlet } from '@angular/common';\r\nimport {\r\n\tChangeDetectionStrategy,\r\n\tComponent,\r\n\tContentChild,\r\n\tinject,\r\n\tinput,\r\n\toutput,\r\n\tTemplateRef,\r\n} from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TextboxModel } from '../../shared/model';\r\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormStore } from '../../store';\r\n\r\n@Component({\r\n\tselector: 'lib-textbox',\r\n\timports: [NgTemplateOutlet, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule],\r\n\ttemplateUrl: './textbox.component.html',\r\n\tstyleUrl: './textbox.component.scss',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextboxComponent {\r\n\tprotected formStore = inject(FormStore);\r\n\r\n\tonInput = output<any>();\r\n\r\n\tinputConfig = input.required<TextboxModel>();\r\n\tcontrol = input.required<FormControl>();\r\n\r\n\t@ContentChild('matPrefixRef')\r\n\tpublic matPrefixRef!: TemplateRef<any> | null;\r\n\r\n\t@ContentChild('matSuffixRef')\r\n\tpublic matSuffixRef!: TemplateRef<any> | null;\r\n\r\n\t@ContentChild('matTextPrefixRef')\r\n\tpublic matTextPrefixRef!: TemplateRef<any> | null;\r\n\r\n\t@ContentChild('matTextSuffixRef')\r\n\tpublic matTextSuffixRef!: TemplateRef<any> | null;\r\n\r\n\tonInputChange(event: Event): void {\r\n\t\tconst inputValue = (event.target as HTMLInputElement).value;\r\n\t\tlet timerId: any = null;\r\n\r\n\t\tclearTimeout(timerId);\r\n\t\ttimerId = setTimeout(() => this.onInput.emit(inputValue), 600);\r\n\t}\r\n}\r\n","<mat-form-field [appearance]=\"inputConfig().appearance\" class=\"textbox-field\">\r\n\t<mat-label>{{ inputConfig().label }}</mat-label>\r\n\t<input\r\n\t\tmatInput\r\n\t\t[formControl]=\"control()\"\r\n\t\t[placeholder]=\"inputConfig().placeholder\"\r\n\t\t[maxlength]=\"inputConfig().limit || null\"\r\n\t\t(input)=\"onInputChange($event)\"\r\n\t/>\r\n\r\n\t@if (matPrefixRef) {\r\n\t\t<ng-container matPrefix [ngTemplateOutlet]=\"matPrefixRef\"> </ng-container>\r\n\t}\r\n\t@if (matSuffixRef) {\r\n\t\t<ng-container matSuffix [ngTemplateOutlet]=\"matSuffixRef\"> </ng-container>\r\n\t}\r\n\t@if (matTextPrefixRef) {\r\n\t\t<ng-container matTextPrefix [ngTemplateOutlet]=\"matTextPrefixRef\"> </ng-container>\r\n\t}\r\n\t@if (matTextSuffixRef) {\r\n\t\t<ng-container matTextSuffix [ngTemplateOutlet]=\"matTextSuffixRef\"> </ng-container>\r\n\t}\r\n\r\n\t@if (inputConfig().hint) {\r\n\t\t<mat-hint align=\"end\">{{ inputConfig().hint }}</mat-hint>\r\n\t}\r\n\r\n\t@if (inputConfig().limit) {\r\n\t\t<mat-hint align=\"end\">{{ control().value.length }} / {{ inputConfig().limit }}</mat-hint>\r\n\t}\r\n\r\n\t@if (formStore.isValid(control())) {\r\n\t\t<mat-error align=\"end\">{{ formStore.getErrorMessage(control()) }}</mat-error>\r\n\t}\r\n</mat-form-field>\r\n","import { ChangeDetectionStrategy, Component, inject, input, output } from '@angular/core';\r\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TextboxModel } from '../../shared/model';\r\nimport { FormStore } from '../../store';\r\n\r\n@Component({\r\n\tselector: 'lib-textarea',\r\n\timports: [FormsModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule],\r\n\ttemplateUrl: './textarea.component.html',\r\n\tstyleUrl: './textarea.component.scss',\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextareaComponent {\r\n\tprotected formStore = inject(FormStore);\r\n\r\n\tonInput = output<any>();\r\n\r\n\tinputConfig = input.required<TextboxModel>();\r\n\tcontrol = input.required<FormControl>();\r\n\r\n\tonInputChange(event: Event): void {\r\n\t\tconst inputValue = (event.target as HTMLInputElement).value;\r\n\t\tlet timerId: any = null;\r\n\r\n\t\tclearTimeout(timerId);\r\n\t\ttimerId = setTimeout(() => this.onInput.emit(inputValue), 600);\r\n\t}\r\n}\r\n","<mat-form-field [appearance]=\"inputConfig().appearance\" class=\"textarea-field\">\r\n\t<mat-label>{{ inputConfig().label }}</mat-label>\r\n\t<textarea\r\n\t\tmatInput\r\n\t\t[formControl]=\"control()\"\r\n\t\t[rows]=\"inputConfig().rows\"\r\n\t\t[placeholder]=\"inputConfig().placeholder\"\r\n\t\t[maxlength]=\"inputConfig().limit || null\"\r\n\t\t(input)=\"onInputChange($event)\"\r\n\t></textarea>\r\n\r\n\t@if (inputConfig().hint) {\r\n\t\t<mat-hint align=\"end\">{{ inputConfig().hint }}</mat-hint>\r\n\t}\r\n\r\n\t@if (inputConfig().limit) {\r\n\t\t<mat-hint align=\"end\">{{ control().value.length }} / {{ inputConfig().limit }}</mat-hint>\r\n\t}\r\n\r\n\t@if (formStore.isValid(control())) {\r\n\t\t<mat-error align=\"end\">{{ formStore.getErrorMessage(control()) }}</mat-error>\r\n\t}\r\n</mat-form-field>\r\n","import { Component, inject, input, output } from '@angular/core';\r\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectChange, MatSelectModule } from '@angular/material/select';\r\nimport { FormStore } from '../../store';\r\nimport { DropdownModel } from '../../shared/model';\r\n\r\n@Component({\r\n\tselector: 'lib-dropdown',\r\n\timports: [FormsModule, ReactiveFormsModule, MatFormFieldModule, MatSelectModule],\r\n\ttemplateUrl: './dropdown.component.html',\r\n\tstyleUrl: './dropdown.component.scss',\r\n})\r\nexport class DropdownComponent {\r\n\tprotected formStore = inject(FormStore);\r\n\r\n\tonSelection = output<any>();\r\n\r\n\tinputConfig = input.required<DropdownModel>();\r\n\tcontrol = input.required<FormControl>();\r\n\r\n\tonSelectionChange(event: MatSelectChange): void {\r\n\t\tthis.onSelection.emit(event.value);\r\n\t}\r\n}\r\n","<mat-form-field [appearance]=\"inputConfig().appearance\" class=\"dropdown-field\">\r\n\t<mat-label>{{ inputConfig().label }}</mat-label>\r\n\t<mat-select\r\n\t\t[formControl]=\"control()\"\r\n\t\t[placeholder]=\"inputConfig().placeholder\"\r\n\t\t[multiple]=\"inputConfig().isMultiple\"\r\n\t\t(selectionChange)=\"onSelectionChange($event)\"\r\n\t>\r\n\t\t@if (inputConfig().isMultiple) {\r\n\t\t\t<mat-select-trigger>\r\n\t\t\t\t{{\r\n\t\t\t\t\tcontrol().value\r\n\t\t\t\t\t\t? typeof control().value?.at(0) === 'object'\r\n\t\t\t\t\t\t\t? control().value.at(0)[inputConfig().keyLabel]\r\n\t\t\t\t\t\t\t: control().value.at(0)\r\n\t\t\t\t\t\t: ''\r\n\t\t\t\t}}\r\n\t\t\t\t@if (control().value && (control().value?.length || 0) > 1) {\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t(+{{ (control().value?.length || 0) - 1 }}\r\n\t\t\t\t\t\t{{ control().value?.length === 2 ? 'other' : 'others' }})\r\n\t\t\t\t\t</span>\r\n\t\t\t\t}\r\n\t\t\t</mat-select-trigger>\r\n\t\t}\r\n\t\t@for (option of inputConfig().options; track option) {\r\n\t\t\t<mat-option [value]=\"inputConfig().keyValue ? option[inputConfig().keyValue] : option\">\r\n\t\t\t\t{{ inputConfig().keyLabel ? option[inputConfig().keyLabel] : option }}\r\n\t\t\t</mat-option>\r\n\t\t}\r\n\t</mat-select>\r\n\r\n\t@if (inputConfig().hint) {\r\n\t\t<mat-hint align=\"end\">{{ inputConfig().hint }}</mat-hint>\r\n\t}\r\n\r\n\t@if (formStore.isValid(control())) {\r\n\t\t<mat-error align=\"end\">{{ formStore.getErrorMessage(control()) }}</mat-error>\r\n\t}\r\n</mat-form-field>\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { DestroyRef, inject, Injectable } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiService {\r\n  #destroyRef = inject(DestroyRef);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get<T>(url: string, params?: HttpParams, headers?: HttpHeaders): Observable<T> {\r\n    return this.http\r\n      .get<T>(url, { params, headers, withCredentials: true })\r\n      .pipe(takeUntilDestroyed(this.#destroyRef));\r\n  }\r\n\r\n  post<T>(url: string, body: any, headers?: HttpHeaders): Observable<T> {\r\n    return this.http\r\n      .post<T>(url, body, { headers, withCredentials: true })\r\n      .pipe(takeUntilDestroyed(this.#destroyRef));\r\n  }\r\n\r\n  put<T>(url: string, body: any, headers?: HttpHeaders): Observable<T> {\r\n    return this.http\r\n      .put<T>(url, body, { headers, withCredentials: true })\r\n      .pipe(takeUntilDestroyed(this.#destroyRef));\r\n  }\r\n\r\n  patch<T>(url: string, body: any, headers?: HttpHeaders): Observable<T> {\r\n    return this.http\r\n      .patch<T>(url, body, { headers, withCredentials: true })\r\n      .pipe(takeUntilDestroyed(this.#destroyRef));\r\n  }\r\n\r\n  delete<T>(url: string, params?: HttpParams, headers?: HttpHeaders): Observable<T> {\r\n    return this.http\r\n      .delete<T>(url, { params, headers, withCredentials: true })\r\n      .pipe(takeUntilDestroyed(this.#destroyRef));\r\n  }\r\n}\r\n","type ButtonVariant = 'basic' | 'raised' | 'flat' | 'icon' | 'stroked' | 'fab' | 'mini-fab' | 'extended-fab';\r\ntype IconPosition = 'start' | 'end';\r\n\r\nexport class ButtonModel {\r\n    variant: ButtonVariant;\r\n    label: string;\r\n    disabled: boolean;\r\n    link: string;\r\n    icon: string;\r\n    iconPosition: IconPosition;\r\n\r\n    /**\r\n     * Creates an instance of ButtonModel.\r\n     * \r\n     * @param type - The type of the button. Defaults to 'basic'.\r\n     * @param label - The label text displayed on the button. Defaults to 'Button'.\r\n     * @param disabled - Indicates whether the button is disabled. Defaults to `false`.\r\n     * @param link - The URL or route the button navigates to. Defaults to an empty string.\r\n     * @param icon - The icon associated with the button. Defaults to an empty string.\r\n     * @param iconPosition - The position of the icon relative to the label. Defaults to 'start'.\r\n     */\r\n    constructor(\r\n        variant: ButtonVariant = 'basic',\r\n        label: string = 'Button',\r\n        disabled: boolean = false,\r\n        link: string = '',\r\n        icon: string = '',\r\n        iconPosition: IconPosition = 'start'\r\n    ) {\r\n        this.variant = variant;\r\n        this.label = label;\r\n        this.disabled = disabled;\r\n        this.link = link;\r\n        this.icon = icon;\r\n        this.iconPosition = iconPosition;\r\n    }\r\n}","import { SelectionModel } from '@angular/cdk/collections';\r\nimport { signal } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\ntype FilterRequestPayload = Partial<{\r\n\tpage: number;\r\n\tlimit: number;\r\n\tsort: string;\r\n\torder: 'asc' | 'desc' | '';\r\n\tfilters: {\r\n\t\t[key: string]: any;\r\n\t};\r\n}> & { [k: string]: any };\r\n\r\ntype DataType = 'date' | 'number' | 'title' | 'currency' | 'custom' | '';\r\ntype FilterOptions = FilterRequestPayload;\r\nconst TablePageIndexDefaultConst = 0;\r\nconst TablePageSizeDefaultConst = 10;\r\n\r\nexport class TableConfigModel {\r\n\tpublic dataKey: string[];\r\n\tpublic dataLabel: string[];\r\n\tpublic dataSource: any[];\r\n\tpublic dataTotal: number;\r\n\tpublic pageIndex: number;\r\n\tpublic pageSize: number;\r\n\tpublic sortKey: string = '';\r\n\tpublic sortOrder: 'asc' | 'desc' | '';\r\n\tpublic selection: SelectionModel<any> = new SelectionModel<any>(true, []);\r\n\tpublic tableClass: string = '';\r\n\r\n\tisHttpPagination = signal(true);\r\n\tisPagination = signal(true);\r\n\tisSorter = signal(true);\r\n\tisLoading = signal(false);\r\n\tselectedOptionId = signal<string | number | null>(null);\r\n\toptions: FilterOptions = {\r\n\t\tsortDirection: 'desc',\r\n\t\tsortActive: 'date',\r\n\t\tlimit: 10,\r\n\t\tpage: 1,\r\n\t\tproperty: null,\r\n\t\tfilters: {},\r\n\t};\r\n\tdataType: {\r\n\t\t[key: string]: {\r\n\t\t\ttype: DataType;\r\n\t\t\tformat?: string;\r\n\t\t\tcurrency?: string;\r\n\t\t\tlocale?: string;\r\n\t\t\tminimumFractionDigits?: number;\r\n\t\t\tmaximumFractionDigits?: number;\r\n\t\t};\r\n\t} = {};\r\n\r\n\tconstructor() {\r\n\t\tthis.dataKey = [];\r\n\t\tthis.dataLabel = [];\r\n\t\tthis.dataSource = [];\r\n\t\tthis.dataTotal = 0;\r\n\t\tthis.pageIndex = TablePageIndexDefaultConst;\r\n\t\tthis.pageSize = TablePageSizeDefaultConst;\r\n\t\tthis.sortOrder = 'asc';\r\n\t}\r\n\r\n\tpublic generateDataType() {\r\n\t\tif (this.dataSource.length === 0) return;\r\n\r\n\t\tfor (const key in this.dataSource[0]) {\r\n\t\t\tconst keyValue = this.dataSource[0][key];\r\n\r\n\t\t\tif (!this.dataKey.includes(key)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet dataType: DataType = '';\r\n\t\t\tif (keyValue instanceof Date) {\r\n\t\t\t\tdataType = 'date';\r\n\t\t\t} else if (typeof keyValue === 'number') {\r\n\t\t\t\tdataType = 'number';\r\n\t\t\t} else if (typeof keyValue === 'string') {\r\n\t\t\t\tdataType = 'title';\r\n\t\t\t} else {\r\n\t\t\t\tdataType = '';\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataType[key] = { type: dataType };\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic isEmpty(): boolean {\r\n\t\treturn this.dataSource?.length === 0;\r\n\t}\r\n\r\n\tpublic resetPage() {\r\n\t\tthis.pageIndex = TablePageIndexDefaultConst;\r\n\t\tthis.pageSize = TablePageSizeDefaultConst;\r\n\t\tthis.sortKey = '';\r\n\t\tthis.sortOrder = 'asc';\r\n\t}\r\n\r\n\tpublic resetDataSource() {\r\n\t\tthis.resetPage();\r\n\r\n\t\tthis.dataSource = [];\r\n\t\tthis.dataTotal = 0;\r\n\t}\r\n\r\n\tisSelected(row: any): boolean {\r\n\t\treturn this.selection.isSelected(row);\r\n\t}\r\n\r\n\tselectRow(row: any): void {\r\n\t\tthis.selection.toggle(row);\r\n\t}\r\n\r\n\tselectAll(isChecked: boolean): void {\r\n\t\tif (!isChecked) {\r\n\t\t\tthis.selection.clear();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.dataSource instanceof MatTableDataSource) {\r\n\t\t\tthis.selection.select(...this.dataSource.data);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.selection.select(...this.dataSource);\r\n\t}\r\n}\r\n","type Appearance = 'fill' | 'outline';\r\ntype TextBoxType = 'text' | 'password' | 'email' | 'number' | 'textarea';\r\n\r\nexport class TextboxModel {\r\n\tconstructor(\r\n\t\tpublic appearance: Appearance = 'outline',\r\n\t\tpublic label: string = '',\r\n\t\tpublic type: TextBoxType = 'text',\r\n\t\tpublic placeholder: string = '',\r\n\t\tpublic hint: string = '',\r\n\t\tpublic rows: number = 5,\r\n\t\tpublic limit: number = 0,\r\n\t) {}\r\n}\r\n","type Appearance = 'fill' | 'outline';\r\n\r\nexport class DropdownModel {\r\n\tconstructor(\r\n\t\tpublic appearance: Appearance = 'outline',\r\n\t\tpublic label: string = '',\r\n\t\tpublic options: any[] = [],\r\n\t\tpublic isMultiple: boolean = false,\r\n\t\tpublic keyValue: string = '',\r\n\t\tpublic keyLabel: string = '',\r\n\t\tpublic placeholder: string = '',\r\n\t\tpublic hint: string = '',\r\n\t) {}\r\n}\r\n","/*\n * Public API Surface of angular-ui-lib\n */\n\n// Components\nexport * from './lib/components/button/button.component';\nexport * from './lib/components/table/table.component';\nexport * from './lib/components/textbox/textbox.component';\nexport * from './lib/components/textarea/textarea.component';\nexport * from './lib/components/dropdown/dropdown.component';\n\n// Services\nexport * from './lib/services/index';\n\n// Store\nexport * from './lib/store/index';\n\n// Pipes\nexport * from './lib/shared/pipes/index';\n\n// Models\nexport * from './lib/shared/model/index';\n\n// Utils\n// export * from './lib/shared/utils/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3"],"mappings":"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"}